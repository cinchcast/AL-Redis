<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cinchcast.Framework.Redis</name>
    </assembly>
    <members>
        <member name="T:Cinchcast.Framework.Redis.IRedisSession">
            <summary>
            Defines the contract for a redis session
            </summary>
        </member>
        <member name="M:Cinchcast.Framework.Redis.IRedisSession.GetConnection">
            <summary>
            Gets the connection.
            </summary>
            <returns>Gets the redis connection</returns>
        </member>
        <member name="T:Cinchcast.Framework.Redis.RedisConnectionGateway">
            <summary>
            This manages a Redis connection pool that handles failover scenarios.  It's a singleton that can wait N times for N milliseconds to retry.  
            You can mention in the configuration file RedisConnectionLogGateway for a log file of retries.
            </summary>
        </member>
        <member name="F:Cinchcast.Framework.Redis.RedisConnectionGateway.REDIS_CONNECTION_FAILED">
            <summary>
            Connection failed message
            </summary>
        </member>
        <member name="F:Cinchcast.Framework.Redis.RedisConnectionGateway._instance">
            <summary>
            Singleton instance object
            </summary>
        </member>
        <member name="F:Cinchcast.Framework.Redis.RedisConnectionGateway._syncLock">
            <summary>
            Internal thread synchronization object
            </summary>
        </member>
        <member name="F:Cinchcast.Framework.Redis.RedisConnectionGateway._syncConnectionLock">
            <summary>
            Internal thread synchronization object for the connection
            </summary>
        </member>
        <member name="F:Cinchcast.Framework.Redis.RedisConnectionGateway._logFileLocation">
            <summary>
            Internal log file location
            </summary>
        </member>
        <member name="F:Cinchcast.Framework.Redis.RedisConnectionGateway._connection">
            <summary>
            Internal connection object
            </summary>
        </member>
        <member name="M:Cinchcast.Framework.Redis.RedisConnectionGateway.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Cinchcast.Framework.Redis.RedisConnectionGateway"/> class.
            </summary>
        </member>
        <member name="M:Cinchcast.Framework.Redis.RedisConnectionGateway.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Cinchcast.Framework.Redis.RedisConnectionGateway"/> class from being created.
            </summary>
        </member>
        <member name="M:Cinchcast.Framework.Redis.RedisConnectionGateway.GetConnection">
            <summary>
            Will try to get a Redis Connection
            </summary>
            <returns>A active valid Redis connection</returns>
        </member>
        <member name="M:Cinchcast.Framework.Redis.RedisConnectionGateway.GetNewConnection(System.Boolean)">
            <summary>
            Gets a new connection
            </summary>
            <returns>A valid Redis connection object</returns>
            <param name="isShiny">Specifies whether or not it's a brand new connection to not apply retry mechanism.</param>
        </member>
        <member name="P:Cinchcast.Framework.Redis.RedisConnectionGateway.RedisConnectionSettings">
            <summary>
            Gets or sets the Redis connection details
            </summary>
        </member>
        <member name="P:Cinchcast.Framework.Redis.RedisConnectionGateway.RetryTimeout">
            <summary>
            Gets or sets the retry timeout
            </summary>
        </member>
        <member name="P:Cinchcast.Framework.Redis.RedisConnectionGateway.Current">
            <summary>
            Gets the current Redis connection gateway instance
            </summary>        
            <returns>The current Redis connection instance</returns>
        </member>
        <member name="T:Cinchcast.Framework.Redis.Rojo">
            <summary>
            A RedisConnectionGateway helper class
            </summary>
        </member>
        <member name="P:Cinchcast.Framework.Redis.Rojo.Call">
            <summary>
            Gets the active RedisConnectionGateway 
            </summary>
        </member>
        <member name="T:Cinchcast.Framework.Redis.RedisConnectionSetting">
            <summary>
            Base class for using Redis connection settings
            </summary>
        </member>
        <member name="M:Cinchcast.Framework.Redis.RedisConnectionSetting.#ctor(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Cinchcast.Framework.Redis.RedisConnectionSetting"/> class.
            </summary>
            <param name="host">The hostname or IP for the Redis server</param>
            <param name="port">The port of the Redis port</param>
            <param name="ioTimeout">The timeout to use during IO operations; this can usually be left unlimited</param>
            <param name="password">The password for Redis authentication</param>
            <param name="maxUnsent">The maximum number of unsent messages to enqueue before new requests are blocking calls</param>
            <param name="allowAdmin">Allow admin access?</param>
            <param name="syncTimeout">Sets the timeout for task API</param>
        </member>
        <member name="P:Cinchcast.Framework.Redis.RedisConnectionSetting.Host">
            <summary>
            Gets or sets the host.
            </summary>
            <value>
            The host.
            </value>
        </member>
        <member name="P:Cinchcast.Framework.Redis.RedisConnectionSetting.Port">
            <summary>
            Gets or sets the port.
            </summary>
            <value>
            The port.
            </value>
        </member>
        <member name="P:Cinchcast.Framework.Redis.RedisConnectionSetting.IOTimeout">
            <summary>
            Gets or sets the io timeout.
            </summary>
            <value>
            The io timeout.
            </value>
        </member>
        <member name="P:Cinchcast.Framework.Redis.RedisConnectionSetting.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="P:Cinchcast.Framework.Redis.RedisConnectionSetting.MaxUnsent">
            <summary>
            Gets or sets the max unsent.
            </summary>
            <value>
            The max unsent.
            </value>
        </member>
        <member name="P:Cinchcast.Framework.Redis.RedisConnectionSetting.AllowAdmin">
            <summary>
            Gets or sets a value indicating whether [allow admin].
            </summary>
            <value>
              <c>true</c> if [allow admin]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cinchcast.Framework.Redis.RedisConnectionSetting.SyncTimeout">
            <summary>
            Gets or sets the sync timeout.
            </summary>
            <value>
            The sync timeout.
            </value>
        </member>
        <member name="T:Cinchcast.Framework.Redis.RedisConnectionString">
            <summary>
            Represents a Redis Connection String configuration
            </summary>
        </member>
        <member name="M:Cinchcast.Framework.Redis.RedisConnectionString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cinchcast.Framework.Redis.RedisConnectionString"/> class.
            </summary>
            <param name="connectionStringName">Name of the connection string.</param>
        </member>
        <member name="T:Cinchcast.Framework.Redis.RedisSession">
            <summary>
            Defines a RedisSession that acts as a connection pool to Booksleve's RedisConnection
            </summary>
        </member>
        <member name="M:Cinchcast.Framework.Redis.RedisSession.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cinchcast.Framework.Redis.RedisSession"/> class.
            </summary>
        </member>
        <member name="M:Cinchcast.Framework.Redis.RedisSession.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cinchcast.Framework.Redis.RedisSession"/> class.
            </summary>
            <param name="connectionStringName">Name of the connection string.</param>
        </member>
        <member name="M:Cinchcast.Framework.Redis.RedisSession.GetConnection">
            <summary>
            Gets the connection.
            </summary>
            <returns>The opened RedisConnection</returns>
            <exception cref="T:System.Exception">When the connection cannot be opened.</exception>
        </member>
    </members>
</doc>
